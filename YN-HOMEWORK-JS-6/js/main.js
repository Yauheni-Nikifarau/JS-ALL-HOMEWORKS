////////////////////////////////////////////////////////////////////////////////////////////
// Задание 1 - Дана строка 'aaa@bbb@ccc'. Замените все @ на ! с помощью глобального
// поиска и замены.

/**
 * task1Replace
 * Заменяет в строке @ на !
 *
 * @param {string} string изменяемая строка.
 * @return {string} измененная строка, где @ заменена !.
 */
let task1Replace = (string) => string.replace(/@/g, '!');


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 2 - В переменной date лежит дата в формате 2025-12-31. Преобразуйте эту
// дату в формат 31/12/2025. 

/**
 * task2
 * преобразует дату в формат DD/MM/YYYY
 *
 * @param {string} date строка с датой.
 * @return {boolean} преобразованная строка.
 */
let task2 = function (date) {
    date = new Date(date);

    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
}


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 3 - Дана строка «Я учу javascript!». Вырежете из нее слово «учу» и слово
// «javascript» тремя разными способами (через substr, substring, slice).

let task2substr = function () {
    let string = 'Я учу javascript!';
    
    // учу
    console.log(`substr: ${string.substr(2,3)}`);
    console.log(`substring: ${string.substring(2,5)}`);
    console.log(`slice: ${string.slice(2,5)}`);
    
    // javascript
    console.log(`substr: ${string.substr(6,10)}`);
    console.log(`substring: ${string.substring(6,16)}`);
    console.log(`slice: ${string.slice(6,16)}`);
}


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 4 - Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень
// из суммы кубов его элементов. Для решения воспользуйтесь циклом for.

/**
 * task4Sqrt
 * возвращает квадратный корень суммы кубов элементов массива
 *
 * @param {object} array массив с числовыми элементами.
 * @return {number} квадратный корень суммы кубов элементов массива.
 */
let task4Sqrt = (array) => {
    let sumOfCub = array.reduce((acc, cur) => acc + cur ** 3, 0);

    return Math.sqrt(sumOfCub);
}



////////////////////////////////////////////////////////////////////////////////////////////
// Задание 5 - Даны переменные a и b. Отнимите от a переменную b и результат
// присвойте переменной c. Сделайте так, чтобы в любом случае в переменную
// c записалось положительное значение. Проверьте работу скрипта при a и b,
// равных соответственно 3 и 5, 6 и 1.

/**
 * task5
 * возвращает разность a и b по модулю
 *
 * @param {number} a уменьшаемое.
 * @param {number} b вычитаемое.
 * @return {number} разность по модулю.
 */
let task5 = (a, b) => Math.abs(a - b);


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 6 - Выведите на экран текущую дату-время в формате 12:59:59 31.12.2014.
// Для решения этой задачи напишите функцию, которая будет добавлять 0
// перед днями и месяцами, которые состоят из одной цифры (из 1.9.2014
// сделает 01.09.2014).

/**
 * task6DateFormat
 * возвращает текущую дату-время в формате 12:59:59 31.12.2014
 *
 * @return {string} текущая дата-время в формате 12:59:59 31.12.2014
 */
let task6DateFormat = function () {
    let date = new Date(),
        hours = date.getHours(),
        minutes = date.getMinutes(),
        sec = date.getSeconds(),
        day = date.getDate(),
        month = date.getMonth() + 1,
        year = date.getFullYear();

        day = (day / 10 < 1) ? '0'+day : day;

        month = (month / 10 < 1) ? '0' + month : month;

    return `${hours}:${minutes}:${sec} ${day}.${month}.${year}`;
}


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 7 - Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая
// найдет строки aba, abba, abbba по шаблону: буква 'a', буква 'b' любое
// количество раз, буква 'a'.

let task7 = () => 'aa aba abba abbba abca abea'.match(/ab+a/g);


////////////////////////////////////////////////////////////////////////////////////////////
// Задание 8 - Напишите ф-цию строгой проверки ввода номер телефона в
// международном формате (<код страны> <код города или сети> <номер
// телефона>). Функция должна возвращать true или false. Используйте
// регулярные выражения.

/**
 * task8CheckPhone
 * проверяет номер телефона на валидность
 *
 * @param {string} phone проверяемый номер телефона.
 * @return {boolean} валидный или невалидный номер телефона.
 */
let task8CheckPhone = (phone) => {
    phone = phone.match(/\d/g).join('');
    let regexp = /(?:375|80)(?:33|44|29|25|17|21|16|23|15|22)\d{7}/g;

    return (phone.match(regexp) == null) ? false : (phone.match(regexp)[0] == phone);
}


////////////////////////////////////////////////////////////////////////////////////////////
/* Задание 9 - Напишите ф-цию строгой проверки адреса эл. почты с учетом следующих
условия:
- весь адрес не должен содержать русские буквы и спецсимволы, кроме
одной «собачки», знака подчеркивания, дефиса и точки;
- имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
имя может содержать только буквы, цифры, но не быть первыми и
единственными в имени;
- после последней точки и после @, домен верхнего уровня (ru, by, com и т.п.)
не может быть длиной менее 2 и более 11 символов. 
Функция должна возвращать true или false. Используйте регулярные
выражения.*/


let task9CheckEmail = function (email) {
    let common = /^[a-zA-Z][-.\w]{2,}@[-.\w]+\.[-.\w]{2,11}$/i,
        repeatSpecials = /[-_@.]{2,}/;

    if (repeatSpecials.test(email) || email.match(common) == null) {
        alert('NO');
        return false;
    }  
       
    alert('OK');
    return true;
}


////////////////////////////////////////////////////////////////////////////////////////////
/* Задание 10 - Напишите ф-цию, которая из полного адреса с параметрами и без,
например: https://tech.onliner.by/2018/04/26/smart-do-200/?
utm_source=main_tile&utm_medium=smartdo200#zag3 , получит адрес
доменного имени (https://tech.onliner.by), остальную часть адреса без
параметров (/2018/04/26/smart-do-200/), параметры
(utm_source=main_tile&utm_medium=smartdo200) и хеш (#zag3). В адресе
может и не быть каких-либо составляющих. Ф-ция должна возвращать
массив.
*/
let task10CheckURL = function (url) {
    let regexp = /(https?:\/\/[^\/#?]+)?(\/[^?#]*)?(\?[^#]*)?(#.*)?/;
    return url.match(regexp).slice(1);
}












